#################################################################
#								#
#	Créateur : Arthur YANG - Responsable Documentation 	#
#				 & Administratif		#
			
#	Date de création : 18/02/2025				#
#								#
#	Dernier modificateur : Arthur YANG			#
#	Date de modification : 16/03/2025			#
#								#
#		Version actuelle : 1.0				#
#								#
#################################################################


----------------------- Configuration et sécurisation du serveur RDS (test) ----------------------- 

Sources : 


Actions effectuées dans le conteneur : 

   => Connexion via root / mot de passe
   => apt install unzip
   => Installation de l'agent promtail
   => Création d'un user "test" et son groupe sans accès interactif. (useradd --system --no-create-home --home /nonexistent --shell /usr/sbin/nologin test)

	Installation de Promtail
  		 => Téléchargement et installation :
		On se place dans le chemin : /usr/local/bin/
		On télécharge le fichier zip de Promtail : wget https://github.com/grafana/loki/releases/download/v3.4.2/promtail-linux-amd64.zip
		Nous pouvons ensuite l'unzip : unzip (nom du fichier)
		C'est un fichier executable que l'on a.

	=> Configuration de Promtail :

	Nous devons ici, avoir un fichier nommé "promtail-config.yaml" pour la configuration de Promtail.
	Nous pouvons télécharger un modèle pré-existant : wget https://github.com/grafana/loki/blob/main/clients/cmd/promtail/promtail-local-config.yaml ou le créer nous même.
	Cela télécharge un modèle que l'on peut renommer comme nous le voulions.


=> Config .yaml personnalisé que nous effectuons :

--------------------------------------------------------------------------------------------

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /var/lib/promtail/positions.yaml

clients:
  - url: http://192.168.7.133:3100/loki/api/v1/push  # Utilisation de l'IP du serveur Loki

scrape_configs:
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          host: SRV-test-AARD
          stream: stdout
          __path__: /var/log/*

--------------------------------------------------------------------------------------------


=> Créer un dossier /var/lib/promtail/ : mkdir -p /var/lib/promtail
		=> chown -R test:test /var/lib/promtail
		=> chmod -R 750 /var/lib/promtail

	=> Nous mettons l'utilisateur créée plus tôt "test" en tant que propriétaire et propriétaire groupe des fichiers de config de Loki.
	
		=> chown -R test:test promtail-config.yaml promtail-linux-amd64
		=> chmod 755 promtail-linux-amd64
		=> chmod 640 promtail-config.yaml


	=> Création du fichier : /etc/systemd/system/promtail.service


Pour ce serveur qui a un problème de CPU et RAM avec promtail, nous limitions le service afin qu'il ne consomme pas trop.

	=> Limite mémoire à 50 Mo
	=> Limite CPU à 10%
	=> Processus avec priorité basse (Nice=10)

--------------------------------------------------------------------------------------------

[Unit]
Description=Promtail Loki
Wants=network-online.target
After=network-online.target

[Service]
Type=simple
User=test
Group=test
MemoryLimit=50M
CPUQuota=10%
Nice=10
ExecStart=/usr/local/bin/promtail-linux-amd64 -config.file=/usr/local/bin/promtail-config.yaml

SyslogIdentifier=test
Restart=always

[Install]
WantedBy=multi-user.target

--------------------------------------------------------------------------------------------


Commandes système et visualisation des logs en direct :

		=> systemctl enable promtail.service 
		=> systemctl start promtail.service
		=> systemctl status promtail.service
		=> journalctl -f -u promtail.service

	Normalement le service promtail est lancé.


Dans nos conteneurs LXC Debian, les logs semblent être dans le "journald" et non le syslog.

On installe "rsyslog" pour qu'ils puissent etre visible dans "syslog"

	=> apt install rsyslog -y
	=> systemctl enable rsyslog --now
	=> tail -f /var/log/syslog

Pour que notre utilisateur "test" puissent avoir les droits de lecture de logs, on va lui ajouter dans le groupe adm : 

	=> usermod -aG adm test
	=> systemctl restart promtail.service

En effet, Un problèmes d’accès aux fichiers /var/log/auth.log, /var/log/cron.log et /var/log/user.log par Grafana sera présent par le fait que l'on a paramétré le service promtail avec l'utilisateur "test".

Faire de même avec le fichier "syslog" : 

	=> chown test:root /var/log/syslog
	=> chmod 640 /var/log/syslog
	=> systemctl restart promtail.service

On peut rajouter : 

	=> chown test:utmp /var/log/btmp



De manière générale, regarder les permissions des fichiers selon l'utilisateur qui utilise le service.


Pour continuer la configuration, on va changer le nom du serveur, dans la ligne de config de promtail : 

	=> host: SRV-test-AARD > host: SRV-RDS-AARD
Nous faisons cela, car nous avons changé sur Proxmox et sur le conteneur directement son nom : SRV-TEST-AARD => SRV-RDS-AARD
Ca nous permettra sur GRAFANA de reconnaitre le bon serveur avec le bon nom à jour.

Nous avons changé le nom du containeur dans le fichier /etc/hostname et /etc/hosts

Utilisation d'un compte FIREFOX MOZILLA (DISPO DANS LE BITWARDEN) pour avoir pour tous, les raccourcies et marques pages de "base".
Compte générique exprès pour l'utilisation de ce serveur RDS.


	=> Etant donné que nous sommes en format maquette, et que je n'ai pas envie de créer a chaque fois plein d'adresse mail exprès, on va réutiliser la boite mail OUTLOOK dispo dans BW, "wizardsndice@outlook.com".
	=> Pour le mot de passe, je génère un nouveau mot de passe différent de la boite, dispo dans les "notes" de l'élément de la boite sur BW.

Dans les paramétrages, je choisi de tout synchro sauf les pages ouvertes, pour éviter de foutre le bordel dans le boulot des autres.

Pour l'aspect sécurité, je créé une clé de récup de mot de passe, dispo dans le BW.

Voila, maintenant je suis entrain de mettre les raccourcies utiles pour accéder aux différentes ressources de l'infrastructure. Il faudra que tout le monde se connecte avec le compte, pour pouvoir avoir accès au raccourcies.
Si un problème survient dans le futur, voir a utiliser Enterprise policy de firefox dans la conf JSON. Mais plus chiant a configurer.

Dans le fichier de configuration /etc/xrdp/xrdp.ini et dans la partie "LOGGIN"
	=> on enlève le # devant le SyslogLevel.

Ici Xrdp envoie ses logs vers le syslog mais aussi dans le fichier xrdp.log et xrdp-sesman.log dans /var/log .

Je vais laisser comme c'est actuellement car cela me parait suffisant pour un format maquette, néanmoins si besoin, nous pourrons toujours plus préciser pour obtenir ces fichiers séparemment et dans un répertoire plus spécifiques.

Voila pour la configuration basique du RDS. A vous de voir si vous voulez ajoutez quelque chose de plus.

